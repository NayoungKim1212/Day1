/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2024-02-13 02:42:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/egov/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/sscm/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1618388108000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<title>JobKorea</title>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/common_include.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  // 페이징 설정\r\n");
      out.write("  var pageSize = 5;\r\n");
      out.write("  var pageBlock = 5;\r\n");
      out.write("  \r\n");
      out.write("  /* OnLoad event */\r\n");
      out.write("  $(function() {\r\n");
      out.write("    // 공지사항 목록 조회\r\n");
      out.write("    selectList();\r\n");
      out.write("\r\n");
      out.write("    /* datepicker설정 */\r\n");
      out.write("    // formerDate datepicker\r\n");
      out.write("    $('#datetimepicker1').datetimepicker({\r\n");
      out.write("    //format : 'L',\r\n");
      out.write("    format : 'YYYY-MM-DD',\r\n");
      out.write("    formatDate : 'YYYY-MM-DD'\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $('#datetimepicker2').datetimepicker({\r\n");
      out.write("    format : 'L',\r\n");
      out.write("    useCurrent : false\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $(\"#datetimepicker1\").on(\"change.datetimepicker\", function(e) {\r\n");
      out.write("      var date = $(\"#datetimepicker1\").find(\"input\").val()\r\n");
      out.write("      $('#datetimepicker2').datetimepicker('minDate', e.date);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // latterDate datepicker\r\n");
      out.write("    $('#datetimepicker3').datetimepicker({\r\n");
      out.write("    //format : 'L',\r\n");
      out.write("    format : 'YYYY-MM-DD',\r\n");
      out.write("    formatDate : 'YYYY-MM-DD'\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $('#datetimepicker4').datetimepicker({\r\n");
      out.write("    format : 'L',\r\n");
      out.write("    useCurrent : false\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $(\"#datetimepicker3\").on(\"change.datetimepicker\", function(e) {\r\n");
      out.write("      var date = $(\"#datetimepicker3\").find(\"input\").val()\r\n");
      out.write("      $('#datetimepicker4').datetimepicker('minDate', e.date);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /* 공지사항 제목 글자 제한 */\r\n");
      out.write("    // maxlength로만 처리 시\r\n");
      out.write("    // 경고창이 뜨지 않고 유지보수 시 불편하다 판단하여 JavaScript로 처리\r\n");
      out.write("    $('#notice_title').keyup(function(e) {\r\n");
      out.write("\r\n");
      out.write("      var limit = 100;\r\n");
      out.write("      var count = $(this).val().length;\r\n");
      out.write("\r\n");
      out.write("      if (count > limit) {\r\n");
      out.write("        swal('제목은 100자 이하로 작성해 주세요');\r\n");
      out.write("        $(this).val($(this).val().substring(0, limit));\r\n");
      out.write("        return false;\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /* 공지사항 내용 글자 제한 & 카운트 이벤트 */\r\n");
      out.write("    $(\"#notice_content\").keyup(function(e) {\r\n");
      out.write("\r\n");
      out.write("      var count = $('#notice_content').val().length;\r\n");
      out.write("      document.getElementById(\"count\").innerHTML = count;\r\n");
      out.write("\r\n");
      out.write("      var limit = 1000;\r\n");
      out.write("      var input = $(this).val().length;\r\n");
      out.write("\r\n");
      out.write("      if (input > limit) {\r\n");
      out.write("        swal('내용은 1000자 이하로 작성해 주세요');\r\n");
      out.write("        $(this).val($(this).val().substring(0, limit));\r\n");
      out.write("        count = limit;\r\n");
      out.write("        document.getElementById(\"count\").innerHTML = count;\r\n");
      out.write("        return false;\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /* 공지사항 작성 모달 이벤트 */\r\n");
      out.write("    $('#write_modal_button').click(function() {\r\n");
      out.write("      var identifier = 'w';\r\n");
      out.write("      fadeInModal(identifier);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /* 공지사항 작성 버튼 이벤트 */\r\n");
      out.write("    $('#write_button').click(function() {\r\n");
      out.write("      writeNotice();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 모달 닫기 버튼 이벤트\r\n");
      out.write("    $('#close_button').click(function() {\r\n");
      out.write("      gfCloseModal();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 공지사항 수정 모달 버튼 이벤트\r\n");
      out.write("    $('#modify_modal_button').click(function() {\r\n");
      out.write("      var identifier = 'm';\r\n");
      out.write("      fadeInModal(identifier);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 공지사항 수정 버튼 이벤트\r\n");
      out.write("    $('#modify_button').click(function() {\r\n");
      out.write("      modifyNotice();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 공지사항 삭제 버튼 이벤트\r\n");
      out.write("    $('#delete_button').click(function() {\r\n");
      out.write("      deleteNotice();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 파일 삭제 버튼 이벤트\r\n");
      out.write("    $('#delete_file_button').click(function() {\r\n");
      out.write("      $('#delete_file_button').hide();\r\n");
      out.write("      $('#file_path').val('');\r\n");
      out.write("      console.log('파일경로삭제',$('#file_path').val())\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("     /* 공지사항 검색 버튼 이벤트 */\r\n");
      out.write("    $('#search_button').on('click', function() {\r\n");
      out.write("      \r\n");
      out.write("      isSearch = true;\r\n");
      out.write("      var validate = validateDate(); \r\n");
      out.write("      \r\n");
      out.write("      if (validate) {\r\n");
      out.write("        \r\n");
      out.write("        option = $('#option').val();\r\n");
      out.write("        keyword = $('#keyword').val();\r\n");
      out.write("        formerDate = $(\"#datetimepicker1\").find(\"input\").val();\r\n");
      out.write("        latterDate = $(\"#datetimepicker3\").find(\"input\").val();\r\n");
      out.write("      \r\n");
      out.write("        selectList();\r\n");
      out.write("      }\r\n");
      out.write("      else {\r\n");
      out.write("        return false;\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // onload 끝\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  var option;\r\n");
      out.write("  var keyword;\r\n");
      out.write("  var formerDate;\r\n");
      out.write("  var latterDate;\r\n");
      out.write("  var isSearch;\r\n");
      out.write("  \r\n");
      out.write("  //날짜검증\r\n");
      out.write("  function validateDate() {\r\n");
      out.write("    \r\n");
      out.write("    var validateFormerDate = $(\"#datetimepicker1\").find('input').val();\r\n");
      out.write("    var validateLatterDate = $(\"#datetimepicker3\").find('input').val();\r\n");
      out.write("    var currentPage = 1;\r\n");
      out.write("    var delimiter = '-';\r\n");
      out.write("    var today = new Date();\r\n");
      out.write("\r\n");
      out.write("    // JavsScript는 월이 0부터 시작하므로 +1\r\n");
      out.write("    // 오늘 날짜와 latterDate를 비교하기 위해서 형식 맞춰줘야 함\r\n");
      out.write("    today = today.getFullYear() + delimiter + ('0' + (today.getMonth() + 1)).slice(-2) + delimiter + ('0' + today.getDate()).slice(-2);\r\n");
      out.write("    console.log('날짜검증',validateFormerDate)\r\n");
      out.write("    \r\n");
      out.write("    // 날짜가 2개 중 하나라도 설정되면 반드시 2개다 설정되어야 함\r\n");
      out.write("    if ((!validateFormerDate && validateLatterDate) && (validateFormerDate && !validateLatterDate)) {\r\n");
      out.write("      swal('기간을 설정해 주세요');\r\n");
      out.write("      return false;\r\n");
      out.write("    } else if (validateFormerDate > validateLatterDate) {\r\n");
      out.write("      swal('기간을 확인해 주세요');\r\n");
      out.write("      return false;\r\n");
      out.write("    } else if (validateFormerDate > today || validateLatterDate > today ) {\r\n");
      out.write("      swal('오늘 이후는 검색할 수 없습니다');\r\n");
      out.write("      return false;\r\n");
      out.write("    } else {\r\n");
      out.write("      return true;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  // 이미지 파일 검증\r\n");
      out.write("  function validateFile() {\r\n");
      out.write("    \r\n");
      out.write("    var imgFile = document.getElementById('uploadFile');\r\n");
      out.write("    var fileForm = /(.*?)\\.(jpg|jpeg|png|bmp)$/;\r\n");
      out.write("    var maxSize = 5 * 1024 * 1024; \r\n");
      out.write("    var fileSize = imgFile.files[0].size;\r\n");
      out.write("    var fileLength = imgFile.files[0].name.length;\r\n");
      out.write("    var maxLength = 100;\r\n");
      out.write("    \r\n");
      out.write("    if(!imgFile.value.match(fileForm)) {\r\n");
      out.write("      swal('이미지 파일만 업로드해 주세요');\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    else if(fileSize > maxSize) {\r\n");
      out.write("      swal('파일은 5MB이하만 업로드 하실 수 있습니다');\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    else if(fileLength > maxLength) {\r\n");
      out.write("      swal('파일명은 100자 이하만 가능합니다')\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    else {\r\n");
      out.write("      return true;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 글 작성 null 체크 함수 */\r\n");
      out.write("  // reqired가 동작하지 않아서 작성\r\n");
      out.write("  function validateIsNull() {\r\n");
      out.write("\r\n");
      out.write("    // 제목, 내용이 입력되었는지 확인\r\n");
      out.write("    var title = $('#notice_title').val();\r\n");
      out.write("    var content = $('#notice_content').val();\r\n");
      out.write("    var auth = $('#notice_auth').val();\r\n");
      out.write("\r\n");
      out.write("    if (!title) {\r\n");
      out.write("      swal('제목을  입력해주세요');\r\n");
      out.write("      $('#notice_title').focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    } else if (!content) {\r\n");
      out.write("      swal('내용을  입력해주세요');\r\n");
      out.write("      $('#notice_content').focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    } else {\r\n");
      out.write("      return true;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("  /* 공지사항 목록 조회 함수 */\r\n");
      out.write("  function selectList(currentPage) {\r\n");
      out.write("    \r\n");
      out.write("    currentPage = currentPage || 1;\r\n");
      out.write("    \r\n");
      out.write("    // 검색조건이 없을 경우의 파라미터\r\n");
      out.write("    var param = {\r\n");
      out.write("        currentPage : currentPage,\r\n");
      out.write("        pageSize : pageSize\r\n");
      out.write("    };\r\n");
      out.write("    \r\n");
      out.write("    if(isSearch){\r\n");
      out.write("        param.option = option;\r\n");
      out.write("        param.keyword = keyword.trim();\r\n");
      out.write("        param.formerDate = formerDate;\r\n");
      out.write("        param.latterDate = latterDate;\r\n");
      out.write("    }\r\n");
      out.write("    // 콜백\r\n");
      out.write("    var resultCallback = function(result) {\r\n");
      out.write("      selectListCallBack(result, currentPage);\r\n");
      out.write("    };\r\n");
      out.write("    callAjax(\"/system/notice.do\", \"post\", \"text\", true, param, resultCallback);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 목록 조회 콜백 함수 */\r\n");
      out.write("  function selectListCallBack(result, currentPage) {\r\n");
      out.write("\r\n");
      out.write("    // 기존 목록 삭제\r\n");
      out.write("    $('#noticeList').empty();\r\n");
      out.write("\r\n");
      out.write("    // 신규 목록 생성\r\n");
      out.write("    $(\"#noticeList\").append(result);\r\n");
      out.write("\r\n");
      out.write("    // 리스트 로우의 총 개수 추출\r\n");
      out.write("    var totalCount = $(\"#totalCount\").val();\r\n");
      out.write("\r\n");
      out.write("    // 페이지 네비게이션 생성\r\n");
      out.write("    var paginationHtml = getPaginationHtml(currentPage, totalCount, pageSize, pageBlock, 'selectList');\r\n");
      out.write("    console.log(\"paginationHtml : \" + paginationHtml);\r\n");
      out.write("    $(\"#pagination\").empty().append(paginationHtml);\r\n");
      out.write("\r\n");
      out.write("    // 현재 페이지 설정\r\n");
      out.write("    $(\"#currentPageCod\").val(currentPage);\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 글 작성 함수 */\r\n");
      out.write("  function writeNotice() {\r\n");
      out.write("    // 공지사항 글 작성 null 체크\r\n");
      out.write("    var validate = validateIsNull();\r\n");
      out.write("\r\n");
      out.write("    if (validate) {\r\n");
      out.write("      var title = $('#notice_title').val();\r\n");
      out.write("      var content = $('#notice_content').val();\r\n");
      out.write("      var auth = $('#notice_auth').val();\r\n");
      out.write("\r\n");
      out.write("      var form = $(\"#myForm\")[0];\r\n");
      out.write("      form.enctype = 'multipart/form-data';\r\n");
      out.write("      var fileData = new FormData(form);\r\n");
      out.write("\r\n");
      out.write("      // file에 데이터 추가\r\n");
      out.write("      fileData.append('title', title);\r\n");
      out.write("      fileData.append('content', content);\r\n");
      out.write("      fileData.append('auth', auth);\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      var uploadFile = document.getElementById(\"uploadFile\").files[0];\r\n");
      out.write("      // 파일 첨부 여부를 판단하기 위한 변수\r\n");
      out.write("      var isFile = false;\r\n");
      out.write("     // fileData.append('file', uploadFile.files[0]);\r\n");
      out.write("     \r\n");
      out.write("      if(uploadFile) {\r\n");
      out.write("        var validate = validateFile();\r\n");
      out.write("        console.log('파일검증확인', validate);\r\n");
      out.write("        if (validate) {\r\n");
      out.write("          fileData.append('flie', uploadFile);\r\n");
      out.write("        }\r\n");
      out.write("        else {\r\n");
      out.write("          return false;\r\n");
      out.write("        }\r\n");
      out.write("      } else {\r\n");
      out.write("        fileData.append('isFile', isFile);\r\n");
      out.write("      }\r\n");
      out.write("     \r\n");
      out.write("      // 콜백 함수\r\n");
      out.write("      function resultCallback(result) {\r\n");
      out.write("\r\n");
      out.write("        if (result == 1) {\r\n");
      out.write("          // fadeOutModal();\r\n");
      out.write("          gfCloseModal();\r\n");
      out.write("          selectList();\r\n");
      out.write("\r\n");
      out.write("        } else {\r\n");
      out.write("          swal('서버에서 에러가 발생했습니다');\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 파일 업로드 AJAX호출(fileUploadCallback작성 해야 함)\r\n");
      out.write("      callAjaxFileUploadSetFormData(\"/system/writeNotice.do\", \"post\", \"json\", true, fileData, resultCallback);\r\n");
      out.write("    } // validate끝\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 단건 조회 함수 */\r\n");
      out.write("  function selectDetail(notice_id, identifier) {\r\n");
      out.write("\r\n");
      out.write("    var param = {\r\n");
      out.write("      notice_id : notice_id\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 공지사항 단건 조회 콜백 함수  */\r\n");
      out.write("    function resultCallback(result) {\r\n");
      out.write("\r\n");
      out.write("      // 공지사항  작성 모달\r\n");
      out.write("      gfModalPop(\"#layer1\");\r\n");
      out.write("      initModal(identifier, result);\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    callAjax(\"/system/detailNotice.do\", \"post\", \"json\", true, param, resultCallback);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 작성 ,공지사항 수정 모달 변경 */\r\n");
      out.write("  function swapModal(identifier) {\r\n");
      out.write("\r\n");
      out.write("    // 공지사항 작성\r\n");
      out.write("    if (identifier == 'w') {\r\n");
      out.write("\r\n");
      out.write("      $('#dt_write').show();\r\n");
      out.write("      $('#dt_notice').hide();\r\n");
      out.write("      $('.auth_block').show();\r\n");
      out.write("      $('#count_cotent').show();\r\n");
      out.write("\r\n");
      out.write("      $('#write_button').show();\r\n");
      out.write("      $('#modify_button').hide();\r\n");
      out.write("      $('#modify_modal_button').hide();\r\n");
      out.write("      $('#delete_button').hide();\r\n");
      out.write("\r\n");
      out.write("      $('#add_file').show();\r\n");
      out.write("      $('#datice_date_block').hide();\r\n");
      out.write("      $('#notice_title').attr('readonly', false);\r\n");
      out.write("      $('#notice_content').attr('readonly', false);\r\n");
      out.write("      $('#download_file').hide();\r\n");
      out.write("      $('#modify_file').hide();\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    // 공지사항 단건 조회\r\n");
      out.write("    else if (identifier == 'r') {\r\n");
      out.write("\r\n");
      out.write("      $('#add_file').hide();\r\n");
      out.write("      $('#dt_write').hide();\r\n");
      out.write("      $('#dt_notice').show();\r\n");
      out.write("      $('.auth_block').hide();\r\n");
      out.write("      $('#count_cotent').hide();\r\n");
      out.write("\r\n");
      out.write("      $('#write_button').hide();\r\n");
      out.write("      $('#modify_button').hide();\r\n");
      out.write("      $('#modify_modal_button').show();\r\n");
      out.write("      $('#delete_button').show();\r\n");
      out.write("\r\n");
      out.write("      $('#datice_date_block').show();\r\n");
      out.write("      $('#notice_title').attr('readonly', true);\r\n");
      out.write("      $('#notice_content').attr('readonly', true);\r\n");
      out.write("\r\n");
      out.write("      $('#modify_file').hide();\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    // 공지사항 수정\r\n");
      out.write("    else if (identifier == 'm') {\r\n");
      out.write("\r\n");
      out.write("      $('#add_file').hide();\r\n");
      out.write("      $('#dt_write').show();\r\n");
      out.write("      $('#dt_notice').hide();\r\n");
      out.write("      $('.auth_block').show();\r\n");
      out.write("      $('#count_cotent').show();\r\n");
      out.write("\r\n");
      out.write("      $('#write_button').hide();\r\n");
      out.write("      $('#modify_button').show();\r\n");
      out.write("      $('#modify_modal_button').hide();\r\n");
      out.write("      $('#delete_button').show();\r\n");
      out.write("      $('#download_file').hide();\r\n");
      out.write("\r\n");
      out.write("      $('#datice_date_block').hide();\r\n");
      out.write("      $('#modify_button').show();\r\n");
      out.write("      $('#modify_file').show();\r\n");
      out.write("      $('#notice_title').attr('readonly', false);\r\n");
      out.write("      $('#notice_content').attr('readonly', false);\r\n");
      out.write("\r\n");
      out.write("      var file = $('#file_name').val();\r\n");
      out.write("\r\n");
      out.write("      if (!file) {\r\n");
      out.write("        $('#delete_file_button').hide();\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 수정 함수*/\r\n");
      out.write("  function modifyNotice() {\r\n");
      out.write("    // null 체크\r\n");
      out.write("    var validate = validateIsNull();\r\n");
      out.write("\r\n");
      out.write("    if(validate) {\r\n");
      out.write("      var notice_id = $('#notice_id').val();\r\n");
      out.write("      var title = $(\"#notice_title\").val();\r\n");
      out.write("      var content = $(\"#notice_content\").val();\r\n");
      out.write("      var auth = $(\"#notice_auth\").val();\r\n");
      out.write("      \r\n");
      out.write("      var form = $(\"#myForm\")[0];\r\n");
      out.write("      form.enctype = 'multipart/form-data';\r\n");
      out.write("      var fileData = new FormData(form);\r\n");
      out.write("      \r\n");
      out.write("      fileData.append('notice_id', notice_id);\r\n");
      out.write("      fileData.append('title', title);\r\n");
      out.write("      fileData.append('content', content);\r\n");
      out.write("      fileData.append('auth', auth);\r\n");
      out.write("      \r\n");
      out.write("      // 기존 첨부파일 유무 확인\r\n");
      out.write("      var file_no = $('#file_no').val();\r\n");
      out.write("      var file_name = $('#file_name').val();\r\n");
      out.write("      fileData.append('file_nm', file_name);\r\n");
      out.write("      \r\n");
      out.write("      // 기존 첨부파일 삭제 여부 확인\r\n");
      out.write("      var file_path = $('#file_path').val();\r\n");
      out.write("      \r\n");
      out.write("      // 첨부 파일 변경, 추가 여부 확인\r\n");
      out.write("      var modifiedFile = document.getElementById('upload_modify_file').files[0];\r\n");
      out.write("      console.log('수정함수공통호출,첨부파일여부확인', modifiedFile)\r\n");
      out.write("      \r\n");
      out.write("      // file_no이 null이면 원본 글에  파일 없음\r\n");
      out.write("      if (file_no && !file_path && !modifiedFile) {\r\n");
      out.write("        fileData.append('deleted', 'file_deleted');\r\n");
      out.write("        fileData.append('file_no', file_no);\r\n");
      out.write("        fileData.append('file_nm', file_name);\r\n");
      out.write("      }\r\n");
      out.write("      else if ((!file_no && !modifiedFile) || (file_no && !modifiedFile)) { // 첨부파일이 없던 글이,글만 수정되는 경우\r\n");
      out.write("        var isFile = 'noFile';\r\n");
      out.write("        // 첨부파일이 없던 글은 file_no을 추가해 주어야 함(서버 에러 방지 및 식별용)\r\n");
      out.write("        fileData.append('noFile', isFile);\r\n");
      out.write("        fileData.append('file_no', 0);\r\n");
      out.write("      }\r\n");
      out.write("      else if(!file_no && modifiedFile) {// 첨부파일 신규 등록\r\n");
      out.write("        fileData.append('added', 'addedFile');\r\n");
      out.write("        fileData.append('file_no', 0);\r\n");
      out.write("        fileData.append('file', modifiedFile);\r\n");
      out.write("      }\r\n");
      out.write("      else if (file_no && modifiedFile) { // 글 수정 + 파일 수정/추가\r\n");
      out.write("        fileData.append('modified','file_modified');\r\n");
      out.write("        fileData.append('file_no', file_no);\r\n");
      out.write("        fileData.append('file', modifiedFile);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 콜백\r\n");
      out.write("      function resultCallback(result) {\r\n");
      out.write("        if (result == 1) {\r\n");
      out.write("          gfCloseModal();\r\n");
      out.write("          selectList();\r\n");
      out.write("        } else {\r\n");
      out.write("          swal('서버에서 에러가 발생했습니다.')\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      callAjaxFileUploadSetFormData(\"/system/modifyNotice.do\", \"post\", \"json\", true, fileData, resultCallback);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 공지사항 삭제 함수 */\r\n");
      out.write("  function deleteNotice() {\r\n");
      out.write("    var isDelete = confirm('정말 삭제하시겠습니까?');\r\n");
      out.write("\r\n");
      out.write("    // file_no, file_nm\r\n");
      out.write("    // 삭제\r\n");
      out.write("    if (isDelete) {\r\n");
      out.write("      var notice_id = $('#notice_id').val();\r\n");
      out.write("      var file_no = $('#file_no').val();\r\n");
      out.write("      var file_nm = $('#file_name').val();\r\n");
      out.write("      \r\n");
      out.write("      if(!file_no) {\r\n");
      out.write("        file_no = 0;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      var param = {\r\n");
      out.write("        notice_id : notice_id,\r\n");
      out.write("        file_no : file_no,\r\n");
      out.write("        file_nm : file_nm\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 콜백\r\n");
      out.write("      function resultCallback(result) {\r\n");
      out.write("        if (result == 1) {\r\n");
      out.write("          gfCloseModal();\r\n");
      out.write("          selectList();\r\n");
      out.write("        } else {\r\n");
      out.write("          swal('서버에서 에러가 발생했습니다');\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("      ;\r\n");
      out.write("\r\n");
      out.write("      callAjax(\"/system/deleteNotice.do\", \"post\", \"text\", true, param, resultCallback);\r\n");
      out.write("    } else {\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  // fadeInModal\r\n");
      out.write("  function fadeInModal(identifier, notice_id) {\r\n");
      out.write("\r\n");
      out.write("    if (identifier == 'w') {\r\n");
      out.write("      // 모달 변경\r\n");
      out.write("      swapModal(identifier);\r\n");
      out.write("      // 모달 초기화 & 값변경\r\n");
      out.write("      initModal(identifier);\r\n");
      out.write("      // 모달 팝업\r\n");
      out.write("      gfModalPop(\"#layer1\");\r\n");
      out.write("\r\n");
      out.write("    } else if (identifier == 'r') {\r\n");
      out.write("      swapModal(identifier);\r\n");
      out.write("      // 공지사항 모달 초기화\r\n");
      out.write("      initModal(identifier);\r\n");
      out.write("      // 공지사항 단건 조회\r\n");
      out.write("      selectDetail(notice_id, identifier);\r\n");
      out.write("    } else if (identifier == 'm') {\r\n");
      out.write("      // 수정은 단건 조회에서 불러온 데이터를 그대로 가지고\r\n");
      out.write("      // 모달만 변경시키면 된다.\r\n");
      out.write("      // 추가:글자수 카운팅 설정\r\n");
      out.write("      console.log('이건호출..?',identifier)\r\n");
      out.write("      swapModal(identifier);\r\n");
      out.write("      initModal(identifier);\r\n");
      out.write("      var count = $('#notice_content').val().length;\r\n");
      out.write("      document.getElementById(\"count\").innerHTML = count;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  // initModal\r\n");
      out.write("  // 모달값 초기화 & 값설정\r\n");
      out.write("  function initModal(identifier, result) {\r\n");
      out.write("    var title = $('#notice_title').val();\r\n");
      out.write("\r\n");
      out.write("    if (identifier == 'w') {\r\n");
      out.write("      $('#notice_title').val('');\r\n");
      out.write("      $('#notice_content').val('');\r\n");
      out.write("      $('#uploadFile').val('');\r\n");
      out.write("      $('#notice_auth').val('0');\r\n");
      out.write("    } \r\n");
      out.write("    else if (identifier == 'r') {\r\n");
      out.write("      console.log('단건조회', result)\r\n");
      out.write("      if (result) {\r\n");
      out.write("        $('#notice_id').val(result.notice_id);\r\n");
      out.write("        $('#notice_title').val(result.title);\r\n");
      out.write("        $('#notice_date').text(result.date);\r\n");
      out.write("        $('#notice_content').val(result.content);\r\n");
      out.write("        $('#notice_auth').val(result.auth);\r\n");
      out.write("        $('#modify_file').hide();\r\n");
      out.write("\r\n");
      out.write("        if (result.file_no) {\r\n");
      out.write("          $('#download_file').show();\r\n");
      out.write("          $('#delete_file_button').show();\r\n");
      out.write("          $('#download').attr(\"href\", result.file_relative_path);\r\n");
      out.write("          $('#file_name').val(result.file_ofname);\r\n");
      out.write("          $('#file_no').val(result.file_no);\r\n");
      out.write("          $('#file_path').val(result.file_relative_path);\r\n");
      out.write("        }\r\n");
      out.write("        else {\r\n");
      out.write("            $('#file_no').val('');\r\n");
      out.write("            $('#download_file').hide();\r\n");
      out.write("        }\r\n");
      out.write("      } \r\n");
      out.write("    }\r\n");
      out.write("    else if (identifier == 'm') { // 수정모달\r\n");
      out.write("      console.log('수정모달호출')\r\n");
      out.write("      $('#upload_modify_file').val('');\r\n");
      out.write("      $('#download_file').hide();\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <form id=\"myForm\" action=\"\" method=\"\">\r\n");
      out.write("    <input type=\"hidden\" id=\"currentPageCod\" value=\"1\"> <input type=\"hidden\" id=\"currentPageComnDtlCod\" value=\"1\"> <input type=\"hidden\" id=\"tmpGrpCod\" value=\"\"> <input type=\"hidden\" id=\"tmpGrpCodNm\" value=\"\"> <input type=\"hidden\" name=\"action\" id=\"action\" value=\"\">\r\n");
      out.write("    <!-- 모달 배경 -->\r\n");
      out.write("    <div id=\"mask\"></div>\r\n");
      out.write("    <div id=\"wrap_area\">\r\n");
      out.write("      <h2 class=\"hidden\">header 영역</h2>\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("      <h2 class=\"hidden\">컨텐츠 영역</h2>\r\n");
      out.write("      <div id=\"container\">\r\n");
      out.write("        <ul>\r\n");
      out.write("          <li class=\"lnb\">\r\n");
      out.write("            <!-- lnb 영역 --> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/lnbMenu.jsp", out, false);
      out.write(" <!--// lnb 영역 -->\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"contents\">\r\n");
      out.write("            <!-- contents -->\r\n");
      out.write("            <h3 class=\"hidden\">contents 영역</h3> <!-- content -->\r\n");
      out.write("            <div class=\"content\">\r\n");
      out.write("              <p class=\"Location\">\r\n");
      out.write("                <a href=\"#\" class=\"btn_set home\">메인으로</a><span class=\"btn_nav bold\">공지사항</span> <a href=\"javascript:window.location.reload();\" class=\"btn_set refresh\">새로고침</a>\r\n");
      out.write("              </p>\r\n");
      out.write("              <p class=\"conTitle\">\r\n");
      out.write("                <span>공지사항</span>\r\n");
      out.write("              </p>\r\n");
      out.write("              <form class=\"search-container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                  <!-- searchbar -->\r\n");
      out.write("                  <div class=\"col-lg-6\">\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                      <select style=\"width: 90px; height: 34px;\" id=\"option\">\r\n");
      out.write("                        <option value=\"all\" selected>전체</option>\r\n");
      out.write("                        <option value=\"title\" id=\"title\">제목</option>\r\n");
      out.write("                        <option value=\"content\" id=\"content\">내용</option>\r\n");
      out.write("                      </select> <input type=\"text\" class=\"form-control\" aria-label=\"...\" id=\"keyword\" autocomplete=\"off\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- // searchbar -->\r\n");
      out.write("                  <!-- datepicker -->\r\n");
      out.write("                  <div class='col-md-3 col-xs-4'>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                      <div class=\"input-group date\" id=\"datetimepicker1\" data-target-input=\"nearest\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control datetimepicker-input\" data-target=\"#datetimepicker1\" value=\"\">\r\n");
      out.write("                        <div class=\"input-group-append\" data-target=\"#datetimepicker1\" data-toggle=\"datetimepicker\">\r\n");
      out.write("                          <div class=\"input-group-text\">\r\n");
      out.write("                            <i class=\"fa fa-calendar\"></i>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <span class=\"divider\">~</span>\r\n");
      out.write("                  <div class='col-md-3 col-xs-4'>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                      <div class=\"input-group date\" id=\"datetimepicker3\" data-target-input=\"nearest\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control datetimepicker-input\" data-target=\"#datetimepicker3\" value=\"\">\r\n");
      out.write("                        <div class=\"input-group-append\" data-target=\"#datetimepicker3\" data-toggle=\"datetimepicker\">\r\n");
      out.write("                          <div class=\"input-group-text\">\r\n");
      out.write("                            <i class=\"fa fa-calendar\"></i>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- // datepicker -->\r\n");
      out.write("                  <!-- button -->\r\n");
      out.write("                  <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" id=\"search_button\">검색</button>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <!-- // button -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- /.row -->\r\n");
      out.write("              </form>\r\n");
      out.write("              <div class=\"divComGrpCodList\">\r\n");
      out.write("                <table class=\"col\">\r\n");
      out.write("                  <caption>caption</caption>\r\n");
      out.write("                  <colgroup>\r\n");
      out.write("                    <col width=\"10%\">\r\n");
      out.write("                    <col width=\"50%\">\r\n");
      out.write("                    <col width=\"30%\">\r\n");
      out.write("                    <col width=\"20%\">\r\n");
      out.write("                  </colgroup>\r\n");
      out.write("                  <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <th scope=\"col\">글번호</th>\r\n");
      out.write("                      <th scope=\"col\">제목</th>\r\n");
      out.write("                      <th scope=\"col\">작성일</th>\r\n");
      out.write("                      <th scope=\"col\">조회수</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </thead>\r\n");
      out.write("                  <tbody id=\"noticeList\"></tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"paging_area\" id=\"pagination\"></div>\r\n");
      out.write("              <div class=\"btn-wrap\">\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("              <h3 class=\"hidden\">풋터 영역</h3>\r\n");
      out.write("              ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/view/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- 공지사항 모달 시작-->\r\n");
      out.write("    <div id=\"layer1\" class=\"layerPop layerType2\" style=\"width: 600px;\">\r\n");
      out.write("      <input type=\"hidden\" id=\"notice_id\">\r\n");
      out.write("      <dl>\r\n");
      out.write("        <dt id=\"dt_write\">\r\n");
      out.write("          <strong>글쓰기</strong>\r\n");
      out.write("        </dt>\r\n");
      out.write("        <dt id=\"dt_notice\">\r\n");
      out.write("          <strong>공지사항</strong>\r\n");
      out.write("        </dt>\r\n");
      out.write("        <dd class=\"content\">\r\n");
      out.write("          <table class=\"row\">\r\n");
      out.write("            <caption>caption</caption>\r\n");
      out.write("            <colgroup>\r\n");
      out.write("              <col width=\"120px\">\r\n");
      out.write("              <col width=\"*\">\r\n");
      out.write("              <col width=\"120px\">\r\n");
      out.write("              <col width=\"*\">\r\n");
      out.write("            </colgroup>\r\n");
      out.write("            <tbody>\r\n");
      out.write("              <tr>\r\n");
      out.write("                <th scope=\"row\">제목</th>\r\n");
      out.write("                <td colspan=\"3\"><input type=\"text\" class=\"inputTxt p100\" name=\"notice_title\" id=\"notice_title\" autocomplete=\"off\" placeholder=\"최대 100자까지 입력 가능합니다\" required /></td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              <tr id=\"datice_date_block\">\r\n");
      out.write("                <th scope=\"row\">작성시간</th>\r\n");
      out.write("                <td colspan=\"3\"><p id=\"notice_date\"></p></td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              <tr>\r\n");
      out.write("                <th scope=\"row\">내용</th>\r\n");
      out.write("                <td colspan=\"3\"><textarea class=\"inputTxt p100\" name=\"notice_content\" id=\"notice_content\" placeholder=\"최대 1000자까지 입력 가능합니다\" required></textarea>\r\n");
      out.write("                  <p class=\"pull-right\" id=\"count_cotent\">\r\n");
      out.write("                    <span id=\"count\">0</span>/1000\r\n");
      out.write("                  </p></td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              <tr id=\"add_file\">\r\n");
      out.write("                <th scope=\"row\">첨부파일</th>\r\n");
      out.write("                <td colspan=\"3\"><input type=\"file\" class=\"inputTxt p100\" id=\"uploadFile\" accept=\"image/*\" /></td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              <tr id=\"download_file\">\r\n");
      out.write("                <th scope=\"row\">첨부파일</th>\r\n");
      out.write("                <td style=\"border-right: none;\"><input id=\"file_no\" type=\"hidden\"> <input id=\"file_path\" type=\"hidden\"> <input id=\"file_name\" value=\"\" readonly></td>\r\n");
      out.write("                <td style=\"border-left: none;\"><a class=\"btn\" id=\"download\" href=\"\" download>\r\n");
      out.write("                    <button class=\"btn-default btn-sm\">다운로드</button>\r\n");
      out.write("                </a></td>\r\n");
      out.write("              <tr>\r\n");
      out.write("              <tr id=\"modify_file\">\r\n");
      out.write("                <th scope=\"row\">첨부파일 변경</th>\r\n");
      out.write("                <td style=\"border-right: none;\"><input type=\"file\" class=\"inputTxt p100\" id=\"upload_modify_file\" accept=\"image/*\" /></td>\r\n");
      out.write("                <td style=\"border-left: none;\"><button id=\"delete_file_button\">첨부파일 삭제</button></td>\r\n");
      out.write("              <tr>\r\n");
      out.write("              <tr class=\"auth_block\">\r\n");
      out.write("                <th scope=\"row\">열람권한</th>\r\n");
      out.write("                <td colspan=\"3\">\r\n");
      out.write("                  <select class=\"auth_block\" id=\"notice_auth\">\r\n");
      out.write("                    <option value=\"0\">전체</option>\r\n");
      out.write("                    <option value=\"1\">직원</option>\r\n");
      out.write("                  </select> \r\n");
      out.write("                </td>\r\n");
      out.write("              </tr>\r\n");
      out.write("              <tr>\r\n");
      out.write("                <td colspan=\"3\" style=\"position:absolute; top:100%; left:35%; border-right:none;border-left:none\">\r\n");
      out.write("                  ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("          </table>\r\n");
      out.write("        </dd>\r\n");
      out.write("      </dl>\r\n");
      out.write("      <a class=\"closePop\" id=\"closePop_button\"><span class=\"hidden\">닫기</span></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- 공지사항 모달 끝 -->\r\n");
      out.write("  </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/view/system/notice.jsp(704,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userType eq 'E'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                  <button type=\"button\" class=\"btn btn-default\" id=\"write_modal_button\">글쓰기</button>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/view/system/notice.jsp(776,18) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userType == 'E'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                    <div class=\"btn-group\">\r\n");
          out.write("                      <button class=\"btn-default btn-sm\" id=\"write_button\">저장</button>\r\n");
          out.write("                      <button class=\"btn-default btn-sm\" id=\"modify_button\">저장</button>\r\n");
          out.write("                      <button class=\"btn-default btn-sm\" id=\"modify_modal_button\">수정</button>\r\n");
          out.write("                      <button class=\"btn-default btn-sm\" id=\"delete_button\">삭제</button>\r\n");
          out.write("                      <button class=\"btn-default btn-sm\" id=\"close_button\">취소</button>\r\n");
          out.write("                    </div>\r\n");
          out.write("                  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
